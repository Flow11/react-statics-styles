"use strict";

require("6to5/polyfill");
var Promise = require("bluebird");
var _ = require("lodash-next");
var recase = require("change-case");

function extractStyle(selector, reactStyle) {
  var rules = Object.keys(reactStyle).map(function (attr) {
    return "  " + recase.paramCase(attr) + ": " + reactStyle[attr] + ";";
  }).join("\n");
  return "" + selector + ": {\\n" + rules + "\\n}\\n";
}

function extractStyles(Component) {
  if (!_.isObject(Component) || !Component.styles || !_.isObject(Component.styles)) {
    return null;
  }
  return "/* From " + Component.displayName + ".styles: */\\n" + Object.keys(Component.styles).map(function (selector) {
    return extractStyle(selector, Component.statics.styles[selector]);
  }).join("\n");
}

function extractAllStyles(Components) {
  return _.without(_.map(Components, extractStyles), null).join("\n");
}

module.exports = _.extend(extractAllStyles, { extractStyle: extractStyle, extractStyles: extractStyles, extractAllStyles: extractAllStyles });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImc6L3JlYWN0LW5leHVzL3JlYWN0LW5leHVzLXN0eWxlL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUN6QixJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDbEMsSUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQ2pDLElBQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQzs7QUFFdEMsU0FBUyxZQUFZLENBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRTtBQUMxQyxNQUFJLEtBQUssR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFDLElBQUk7a0JBQVUsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsVUFBSyxVQUFVLENBQUMsSUFBSSxDQUFDO0dBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNsSCxjQUFVLFFBQVEsY0FBUSxLQUFLLGFBQVE7Q0FDeEM7O0FBRUQsU0FBUyxhQUFhLENBQUMsU0FBUyxFQUFFO0FBQ2hDLE1BQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUNyQixDQUFDLFNBQVMsQ0FBQyxNQUFNLElBQ2pCLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEVBQUU7QUFDakMsV0FBTyxJQUFJLENBQUM7R0FDYjtBQUNELFNBQU8sYUFBVyxTQUFTLENBQUMsV0FBVyxzQkFBa0IsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQ3JGLEdBQUcsQ0FBQyxVQUFDLFFBQVE7V0FBSyxZQUFZLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0dBQUEsQ0FBQyxDQUM3RSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Q0FDYjs7QUFFRCxTQUFTLGdCQUFnQixDQUFDLFVBQVUsRUFBRTtBQUNwQyxTQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0NBQ3JFOztBQUVELE1BQU0sQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsRUFBRSxFQUFFLFlBQVksRUFBWixZQUFZLEVBQUUsYUFBYSxFQUFiLGFBQWEsRUFBRSxnQkFBZ0IsRUFBaEIsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnNnRvNS9wb2x5ZmlsbCcpO1xudmFyIFByb21pc2UgPSByZXF1aXJlKCdibHVlYmlyZCcpO1xuY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaC1uZXh0Jyk7XG5jb25zdCByZWNhc2UgPSByZXF1aXJlKCdjaGFuZ2UtY2FzZScpO1xuXG5mdW5jdGlvbiBleHRyYWN0U3R5bGUoc2VsZWN0b3IsIHJlYWN0U3R5bGUpIHtcbiAgbGV0IHJ1bGVzID0gT2JqZWN0LmtleXMocmVhY3RTdHlsZSkubWFwKChhdHRyKSA9PiBgICAke3JlY2FzZS5wYXJhbUNhc2UoYXR0cil9OiAke3JlYWN0U3R5bGVbYXR0cl19O2ApLmpvaW4oJ1xcbicpO1xuICByZXR1cm4gYCR7c2VsZWN0b3J9OiB7XFxuJHtydWxlc31cXG59XFxuYDtcbn1cblxuZnVuY3Rpb24gZXh0cmFjdFN0eWxlcyhDb21wb25lbnQpIHtcbiAgaWYoIV8uaXNPYmplY3QoQ29tcG9uZW50KSB8fFxuICAgICAgIUNvbXBvbmVudC5zdHlsZXMgfHxcbiAgICAgICFfLmlzT2JqZWN0KENvbXBvbmVudC5zdHlsZXMpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgcmV0dXJuIGAvKiBGcm9tICR7Q29tcG9uZW50LmRpc3BsYXlOYW1lfS5zdHlsZXM6ICovXFxuYCArIE9iamVjdC5rZXlzKENvbXBvbmVudC5zdHlsZXMpXG4gIC5tYXAoKHNlbGVjdG9yKSA9PiBleHRyYWN0U3R5bGUoc2VsZWN0b3IsIENvbXBvbmVudC5zdGF0aWNzLnN0eWxlc1tzZWxlY3Rvcl0pKVxuICAuam9pbignXFxuJyk7XG59XG5cbmZ1bmN0aW9uIGV4dHJhY3RBbGxTdHlsZXMoQ29tcG9uZW50cykge1xuICByZXR1cm4gXy53aXRob3V0KF8ubWFwKENvbXBvbmVudHMsIGV4dHJhY3RTdHlsZXMpLCBudWxsKS5qb2luKCdcXG4nKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfLmV4dGVuZChleHRyYWN0QWxsU3R5bGVzLCB7IGV4dHJhY3RTdHlsZSwgZXh0cmFjdFN0eWxlcywgZXh0cmFjdEFsbFN0eWxlcyB9KTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==